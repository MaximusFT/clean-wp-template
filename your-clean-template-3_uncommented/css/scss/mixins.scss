@mixin breakpoint($point) {
    @if $point == extra-large-hd {
        @media (min-width: 1880px) {
            @content;
        }
    }
    @else if $point == extra-large {
        @media (min-width: 1600px) and (max-width: 1879px)  {
            @content;
        }
    }
    @else if $point == large {
        @media (min-width: 1367px) and (max-width: 1599px)  {
            @content;
        }
    }
    @else if $point == notebook {
        @media (min-width: 1200px) and (max-width: 1366px)  {
            @content;
        }
    }
    @else if $point == notebook-extra {
        @media (min-width: 1200px) {
            @content;
        }
    }
    @else if $point == medium {
        @media (min-width: 992px) and (max-width: 1199px) {
            @content;
        }
    }
    @else if $point == medium-plus {
        @media (max-width: 991px) {
            @content;
        }
    }
    @else if $point == small {
        @media (min-width: 768px) and (max-width: 991px) {
            @content;
        }
    }
    @else if $point == extra-small {
        @media (min-width: 544px) and (max-width: 767px) {
            @content;
        }
    }
    @else if $point == extra-small-plus {
        @media (max-width: 767px) {
            @content;
        }
    }
    @else if $point == little {
        @media (max-width: 543px) {
            @content;
        }
    }
}

@mixin transition($transition...) {
    -moz-transition: $transition;
    -o-transition: $transition;
    -webkit-transition: $transition;
    transition: $transition;
}

@mixin transition-duration($duration...) {
    -moz-transition-property: $duration;
    -o-transition-property: $duration;
    -webkit-transition-property: $duration;
    transition-property: $duration;
}

@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

// rotate
@mixin rotate($deg) {
    @include transform(rotate(#{$deg}deg));
}

// translate
@mixin translate($x, $y) {
    @include transform(translate($x, $y));
}


@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin shadow($size: 8px, $opa: 0.25) {
    -webkit-box-shadow: 0px 3px $size 0px rgba(24,26,28,$opa);
    -moz-box-shadow: 0px 3px $size 0px rgba(24,26,28,$opa);
    box-shadow: 0px 3px $size 0px rgba(24,26,28,$opa);
}
